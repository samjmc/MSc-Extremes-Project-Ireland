data <- readRDS("gtsr_daily_max_1979_2014.rds")
head(data)
names(data)
levels(data$station_name)
#MAPPING THE LON AND LAT POINTS
library(sf)
#MAPPING THE LON AND LAT POINTS
library(sf)
library(ggplot2)
library(dplyr)
library(tmap)
library(tmap)
library(tidyr)
#Load spatial data
ireland <- st_read("IRL_adm0.shp")
#UNIQUE COORDS FOR LAT AND LON
unique_coords <- unique(data[, c("lon", "lat")])
#UNIQUE COORDS FOR LAT AND LON
unique_coords <- unique(data[, c("lon", "lat")])
#CONVERT TO Sf object
unique_coords_sf <- st_as_sf(unique_coords, coords = c("lon", "lat"), crs = 4326)
#PLOT
tm_shape(ireland) +
tm_borders() +
tm_shape(unique_coords_sf) +
tm_dots(col = "blue", size = 0.05, title = "Unique Coordinates") +
tm_style("gray")
dun_laoghaire<- subset(data, station_name == "795") #795 dun laoghaire
# Convert the selected point to an sf object
dun_laoghaire_sf <- st_as_sf(dun_laoghaire, coords = c("lon", "lat"), crs = 4326)
# Plot the map
tm_shape(ireland) +
tm_borders() +
tm_shape(dun_laoghaire_sf) +
tm_dots(col = "blue", size = 0.5, title = "dun_laoghaire Observation") +
tm_style("gray")
# Time series plot
ggplot(dun_laoghaire, aes(x = as.Date(date_time), y = surge_daily_max)) +
geom_line() +
labs(title = "Sea Level Surge Daily Maximum Values Over Time",
x = "Date", y = "Surge Daily Max")
# Seasonal decomposition additive
ts_data <- ts(dun_laoghaire$surge_daily_max, frequency = 365.25)
ts_decomp <- decompose(ts_data)
plot(ts_decomp)
#multiplicative
ts_data2 <- ts(dun_laoghaire$surge_daily_max, frequency = 365.25)
ts_decomp2 <- decompose(ts_data2, type = "multiplicative")
plot(ts_decomp2)
# Define custom ordering of months from July to June
custom_order <- c("Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May", "Jun")
# Convert month integer to corresponding month abbreviation
dun_laoghaire$month <- factor(month.abb[dun_laoghaire$month], levels = custom_order)
# Calculate monthly averages
monthly_avg <- dun_laoghaire %>%
group_by(month) %>%
summarize(avg_surge_daily_max = mean(surge_daily_max), na.rm = TRUE)
# Plot monthly averages with custom ordering
ggplot(monthly_avg, aes(x = month, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Monthly Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
# Define custom ordering of months from July to June
custom_order <- c("Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May", "Jun")
# Convert month integer to corresponding month abbreviation
dun_laoghaire$month <- factor(month.abb[dun_laoghaire$month], levels = custom_order)
# Calculate monthly averages
monthly_avg <- dun_laoghaire %>%
group_by(month) %>%
summarize(avg_surge_daily_max = mean(surge_daily_max), na.rm = TRUE)
# Plot monthly averages with custom ordering
ggplot(monthly_avg, aes(x = month, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Monthly Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
dun_laoghaire
View(dun_laoghaire)
# Define custom ordering of months from July to June
custom_order <- c("Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "Jan", "Feb", "Mar", "Apr", "May", "Jun")
# Convert month integer to corresponding month abbreviation
dun_laoghaire$month <- factor(month.abb[dun_laoghaire$month], levels = custom_order)
# Calculate monthly averages
monthly_avg <- dun_laoghaire %>%
group_by(year, month) %>%
summarize(avg_surge_daily_max = mean(surge_daily_max), na.rm = TRUE)
monthly_avg
View(monthly_avg)
# Plot monthly averages with custom ordering
ggplot(monthly_avg, aes(x = month, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Monthly Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
monthly_avg
# Calculate monthly averages
monthly_avg <- dun_laoghaire %>%
group_by(year, month) %>%
summarize(avg_surge_daily_max = mean(surge_daily_max), na.rm = TRUE) %>%
ungroup() %>%
mutate(time_index = 1:n())
# Plot monthly averages with custom ordering
ggplot(monthly_avg, aes(x = index, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Monthly Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
# Plot monthly averages with custom ordering
ggplot(monthly_avg, aes(x = time_index, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Monthly Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
annual_avg <- dun_laoghaire %>%
group_by(year) %>%
summarize(avg_surge_daily_max = mean(surge_daily_max), na.rm = TRUE) %>%
ungroup() %>%
mutate(time_index = 1:n())
annual_avg
View(annual_avg)
ggplot(yearly_avg, aes(x = year, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Annual Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
ggplot(annnual_avg, aes(x = year, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Annual Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
ggplot(annual_avg, aes(x = year, y = avg_surge_daily_max, group = 1)) +
geom_line() +
labs(title = "Annual Averages of Sea Level Surge Daily Maximum Values (Total)",
x = "Month", y = "Avg Surge Daily Max")
library(extRemes)
# Threshold method (GEV/GP)
# Define threshold value
threshold <- quantile(dun_laoghaire$surge_daily_max, probs = 0.95)
# Fit GEV distribution to threshold exceedances
gev_fit <- fevd(dun_laoghaire$surge_daily_max, threshold = threshold, method = "MLE")
# Fit GEV distribution to block maxima
gev_block_fit <- fevd(dun_laoghaire$surge_daily_max, method = "MLE")
# Display results
print("Threshold Method (GEV/GP):")
print(summary(gev_fit))
plot(gev_fit)
plot(denisty(dun_laoghaire$surge_daily_max))
plot(density(dun_laoghaire$surge_daily_max))
?fevd
return.level(gev_fit)
fevd
?fevd
?fevd
dun_laoghaire_above_threshold <- dun_laoghaire %>% filter(surge_daily_max > threshold)
dun_laoghaire_above_threshold
dun_laoghaire_above_threshold
# Fit GEV distribution to threshold exceedances
gev_fit <- fevd(surge_daily_max, dun_laoghaire_above_threshold, threshold = threshold, method = "MLE")
dun_laoghaire_above_threshold
dun_laoghaire_above_threshold
surge_daily_max
surge_daily_max
# Fit GEV distribution to threshold exceedances
gev_fit <- fevd(dun_laoghaire_above_threshold$surge_daily_max, threshold = threshold, method = "MLE")
plot(gev_fit)
distill(gev_fit)
plot(gev_fit, "trace")
return.level(gev_fit)
# Fit GEV distribution to threshold exceedances
gev_fit <- fevd(dun_laoghaire_above_threshold$surge_daily_max, threshold = threshold, method = "MLE")
dun_laoghaire_annual_max <- dun_laoghaire %>% group_by(year) %>% (annual_max = max(surge_daily_max))
dun_laoghaire_annual_max <- dun_laoghaire %>% group_by(year) %>% summarise(annual_max = max(surge_daily_max))
dun_laoghaire_annual_max
dun_laoghaire_annual_max
# Fit GEV distribution to block maxima
gev_block_fit <- fevd(dun_laoghaire_annual_max$annual_max, method = "MLE")
plot(gev_block_fit) ## plot block max fit
return.level(gev_block_fit)
return.level(gev_fit)
